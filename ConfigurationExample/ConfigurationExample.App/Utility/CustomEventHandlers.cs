namespace ConfigurationExample.App.Utility
{
	/// <summary>
	///     Empty action event handler.
	/// </summary>
	public delegate void ActionEventHandler();

	/// <summary>
	///     Event handler with strongly typed sender.
	/// </summary>
	/// <param name="sender">The source of the event.</param>
	/// <typeparam name="TSender">The type of the event sender.</typeparam>
	public delegate void TypedEventHandler<in TSender>(TSender sender);

	/// <summary>
	///     Event handler with strongly typed sender and event args.
	/// </summary>
	/// <param name="sender">The source of the event.</param>
	/// <param name="args">An object that contains the event data.</param>
	/// <typeparam name="TSender">The type of the event sender.</typeparam>
	/// <typeparam name="TEventArgs">The type of the event data generated by the event.</typeparam>
	public delegate void TypedEventHandler<in TSender, in TEventArgs>(TSender sender, TEventArgs args);

	/// <summary>
	///     Event handler without sender.
	/// </summary>
	/// <remarks>
	///     Used when exposing sender is not desired or meaningless (in static events).
	/// </remarks>
	/// <param name="args">An object that contains the event data.</param>
	/// <typeparam name="TEventArgs">The type of the event data generated by the event.</typeparam>
	public delegate void SenderlessEventHandler<in TEventArgs>(TEventArgs args);
}